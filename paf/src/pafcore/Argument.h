//DO NOT EDIT THIS FILE, it is generated by idlcpp
//http://www.idlcpp.org

#pragma once

#include "./Typedef.h"
#include "./Reference.h"
#include "./Metadata.h"
namespace pafcore{ class Type; }

namespace pafcore
{
	class PAFCORE_EXPORT Argument : public Metadata
	{
	public:
		static ::pafcore::ClassType* GetType();
		virtual ::pafcore::ClassType* getType();
		virtual size_t getAddress();

		Type* get_type();
		bool get_byValue();
		bool get_byRef();
		bool get_byPtr();
		bool get_byOutPtr();
		bool get_byOutRef();
		bool get_byNewPtr();
		bool get_byNewRef();
		bool get_byNewArrayPtr();
		bool get_byNewArrayRef();
		bool get_isConstant();

	public:
		Argument(const char* name, Type* type, Passing passing, bool constant);
	public:
		Type* m_type;
		Passing m_passing;
		bool m_constant;
		
	};
}