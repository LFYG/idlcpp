//DO NOT EDIT THIS FILE, it is generated by idlcpp
//http://www.idlcpp.org

#pragma once

#include "./Metadata.h"
namespace pafcore{ class ClassType; }
namespace pafcore{ class Type; }

namespace pafcore
{


	class Variant;
	typedef ErrorCode(*InstanceArrayPropertyGetter)(Variant* that, size_t index, Variant* value);
	typedef ErrorCode(*InstanceArrayPropertySetter)(Variant* that, size_t index, Variant* value);
	typedef ErrorCode(*InstanceArrayPropertySizer)(Variant* that, Variant* size);
	typedef ErrorCode(*InstanceArrayPropertyResizer)(Variant* that, Variant* size);


	class PAFCORE_EXPORT InstanceArrayProperty : public Metadata
	{
	public:
		static ::pafcore::ClassType* GetType();
		virtual ::pafcore::ClassType* getType();
		virtual size_t getAddress();

		ClassType* get_objectType();
		bool get_hasGetter() const;
		bool get_hasSetter() const;
		bool get_hasSizer() const;
		bool get_hasResizer() const;

		Type* get_getterType();
		bool get_getterByValue() const;
		bool get_getterByRef() const;
		bool get_getterByPtr() const;
		bool get_getterConstant() const;

		Type* get_setterType();
		bool get_setterByValue() const;
		bool get_setterByRef() const;
		bool get_setterByPtr() const;
		bool get_setterConstant() const;


	public:
		InstanceArrayProperty(const char* name, ClassType* objectType, 
			InstanceArrayPropertyGetter getter, Type* getterType, Passing getterPassing, bool getterConstant,
			InstanceArrayPropertySetter setter, Type* setterType, Passing setterPassing, bool setterConstant,
			InstanceArrayPropertySizer sizer, InstanceArrayPropertyResizer resizer);
	public:
		ClassType* m_objectType;
		InstanceArrayPropertyGetter m_getter;
		InstanceArrayPropertySetter m_setter;
		InstanceArrayPropertySizer m_sizer;
		InstanceArrayPropertyResizer m_resizer;
		Type* m_getterType;
		Type* m_setterType;
		byte_t m_getterPassing;
		byte_t m_setterPassing;
		bool m_getterConstant;
		bool m_setterConstant;

	};

}