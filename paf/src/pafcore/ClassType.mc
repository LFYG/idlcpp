//DO NOT EDIT THIS FILE, it is generated by idlcpp
//http://www.idlcpp.org

#pragma once

#include "./Type.mh"
#include "./Typedef.mh"
#include "./Metadata.mh"
#include "./InstanceProperty.mh"
#include "./InstanceArrayProperty.mh"
#include "ClassType.mh"
#include "AutoRun.h"
#include "NameSpace.h"
#include "Result.h"
#include "Argument.h"
#include "InstanceField.h"
#include "StaticField.h"
#include "InstanceProperty.h"
#include "InstanceArrayProperty.h"
#include "StaticProperty.h"
#include "StaticArrayProperty.h"
#include "InstanceMethod.h"
#include "StaticMethod.h"
#include "Enumerator.h"
#include "PrimitiveType.h"
#include "VoidType.h"


namespace idlcpp
{

	__pafcore__ClassTypeIterator_Type::__pafcore__ClassTypeIterator_Type() : ::pafcore::ClassType("ClassTypeIterator", ::pafcore::value_object)
	{
		m_size = sizeof(::pafcore::ClassTypeIterator);
		static ::pafcore::Result s_deref_Result_0(RuntimeTypeOf<::pafcore::ClassType>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_ptr);
		static ::pafcore::Argument s_deref_Arguments_0[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
		};
		static ::pafcore::Result s_next_Result_1(RuntimeTypeOf<::pafcore::ClassTypeIterator>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_ptr);
		static ::pafcore::Argument s_next_Arguments_1[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
		};
		static ::pafcore::Overload s_deref_Overloads[] = 
		{
			::pafcore::Overload(&s_deref_Result_0, 0, 0),
		};
		static ::pafcore::Overload s_next_Overloads[] = 
		{
			::pafcore::Overload(&s_next_Result_1, 0, 0),
		};
		static ::pafcore::InstanceMethod s_instanceMethods[] = 
		{
			::pafcore::InstanceMethod("deref", 0, ClassTypeIterator_deref, s_deref_Overloads, 1),
			::pafcore::InstanceMethod("next", 0, ClassTypeIterator_next, s_next_Overloads, 1),
		};
		m_instanceMethods = s_instanceMethods;
		m_instanceMethodCount = paf_array_size_of(s_instanceMethods);
		static Metadata* s_members[] = 
		{
			&s_instanceMethods[0],
			&s_instanceMethods[1],
		};
		m_members = s_members;
		m_memberCount = paf_array_size_of(s_members);
		::pafcore::NameSpace::GetGlobalNameSpace()->getNameSpace("pafcore")->registerMember(this);
	}

	void __pafcore__ClassTypeIterator_Type::destroyInstance(void* address)
	{
		delete reinterpret_cast<::pafcore::ClassTypeIterator*>(address);
	}

	void __pafcore__ClassTypeIterator_Type::destroyArray(void* address)
	{
		paf_delete_array(reinterpret_cast<::pafcore::ClassTypeIterator*>(address));
	}

	void __pafcore__ClassTypeIterator_Type::assign(void* dst, const void* src)
	{
		*(::pafcore::ClassTypeIterator*)dst = *(const ::pafcore::ClassTypeIterator*)src;
	}

	::pafcore::ErrorCode __pafcore__ClassTypeIterator_Type::ClassTypeIterator_deref(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(1 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassTypeIterator* self;
			if(!args[0]->castToValuePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			::pafcore::ClassType* res = self->deref();
			result->assignReferencePtr(RuntimeTypeOf<::pafcore::ClassType>::RuntimeType::GetSingleton(), res, false, ::pafcore::Variant::by_ptr);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassTypeIterator_Type::ClassTypeIterator_next(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(1 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassTypeIterator* self;
			if(!args[0]->castToValuePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			::pafcore::ClassTypeIterator* res = self->next();
			result->assignValuePtr(RuntimeTypeOf<::pafcore::ClassTypeIterator>::RuntimeType::GetSingleton(), res, false, ::pafcore::Variant::by_ptr);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	__pafcore__ClassTypeIterator_Type* __pafcore__ClassTypeIterator_Type::GetSingleton()
	{
		static __pafcore__ClassTypeIterator_Type* s_instance = 0;
		static char s_buffer[sizeof(__pafcore__ClassTypeIterator_Type)];
		if(0 == s_instance)
		{
			s_instance = (__pafcore__ClassTypeIterator_Type*)s_buffer;
			new (s_buffer)__pafcore__ClassTypeIterator_Type;
		}
		return s_instance;
	}

	__pafcore__ClassType_Type::__pafcore__ClassType_Type() : ::pafcore::ClassType("ClassType", ::pafcore::class_type)
	{
		m_size = sizeof(::pafcore::ClassType);
		static BaseClass s_baseClasses[] =
		{
			{RuntimeTypeOf<::pafcore::Type>::RuntimeType::GetSingleton(), paf_base_offset_of(::pafcore::ClassType, ::pafcore::Type)},
		};
		m_baseClasses = s_baseClasses;
		m_baseClassCount = paf_array_size_of(s_baseClasses);
		static ::pafcore::ClassTypeIterator s_classTypeIterators[] =
		{
			::pafcore::ClassTypeIterator(RuntimeTypeOf<::pafcore::Type>::RuntimeType::GetSingleton()->m_firstDerivedClass, this),
		};
		RuntimeTypeOf<::pafcore::Type>::RuntimeType::GetSingleton()->m_firstDerivedClass = &s_classTypeIterators[0];
		m_classTypeIterators = s_classTypeIterators;
		static ::pafcore::Result s__findMember__Result_0(RuntimeTypeOf<::pafcore::Metadata>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_ptr);
		static ::pafcore::Argument s__findMember__Arguments_0[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
			::pafcore::Argument("name", RuntimeTypeOf<char>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_ptr, true),
			::pafcore::Argument("includeBaseClasses", RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
		};
		static ::pafcore::Result s__getBaseClassCount__Result_1(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_value);
		static ::pafcore::Argument s__getBaseClassCount__Arguments_1[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
		};
		static ::pafcore::Result s__getBaseClass__Result_2(RuntimeTypeOf<::pafcore::Metadata>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_ptr);
		static ::pafcore::Argument s__getBaseClass__Arguments_2[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
			::pafcore::Argument("index", RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
		};
		static ::pafcore::Result s__getFirstDerivedClass__Result_3(RuntimeTypeOf<::pafcore::ClassTypeIterator>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_ptr);
		static ::pafcore::Argument s__getFirstDerivedClass__Arguments_3[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
		};
		static ::pafcore::Result s__getInstanceArrayPropertyCount__Result_4(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_value);
		static ::pafcore::Argument s__getInstanceArrayPropertyCount__Arguments_4[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
			::pafcore::Argument("includeBaseClasses", RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
		};
		static ::pafcore::Result s__getInstanceArrayProperty__Result_5(RuntimeTypeOf<::pafcore::InstanceArrayProperty>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_ptr);
		static ::pafcore::Argument s__getInstanceArrayProperty__Arguments_5[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
			::pafcore::Argument("index", RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
			::pafcore::Argument("includeBaseClasses", RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
		};
		static ::pafcore::Result s__getInstancePropertyCount__Result_6(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_value);
		static ::pafcore::Argument s__getInstancePropertyCount__Arguments_6[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
			::pafcore::Argument("includeBaseClasses", RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
		};
		static ::pafcore::Result s__getInstanceProperty__Result_7(RuntimeTypeOf<::pafcore::InstanceProperty>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_ptr);
		static ::pafcore::Argument s__getInstanceProperty__Arguments_7[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
			::pafcore::Argument("index", RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
			::pafcore::Argument("includeBaseClasses", RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
		};
		static ::pafcore::Result s__getMemberCount__Result_8(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_value);
		static ::pafcore::Argument s__getMemberCount__Arguments_8[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
			::pafcore::Argument("includeBaseClasses", RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
		};
		static ::pafcore::Result s__getMember__Result_9(RuntimeTypeOf<::pafcore::Metadata>::RuntimeType::GetSingleton(), false, ::pafcore::Result::by_ptr);
		static ::pafcore::Argument s__getMember__Arguments_9[] = 
		{
			::pafcore::Argument("this", GetSingleton(), ::pafcore::Argument::by_ptr, false),
			::pafcore::Argument("index", RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
			::pafcore::Argument("includeBaseClasses", RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), ::pafcore::Argument::by_value, false),
		};
		static ::pafcore::Overload s__findMember__Overloads[] = 
		{
			::pafcore::Overload(&s__findMember__Result_0, s__findMember__Arguments_0, 2),
		};
		static ::pafcore::Overload s__getBaseClassCount__Overloads[] = 
		{
			::pafcore::Overload(&s__getBaseClassCount__Result_1, 0, 0),
		};
		static ::pafcore::Overload s__getBaseClass__Overloads[] = 
		{
			::pafcore::Overload(&s__getBaseClass__Result_2, s__getBaseClass__Arguments_2, 1),
		};
		static ::pafcore::Overload s__getFirstDerivedClass__Overloads[] = 
		{
			::pafcore::Overload(&s__getFirstDerivedClass__Result_3, 0, 0),
		};
		static ::pafcore::Overload s__getInstanceArrayPropertyCount__Overloads[] = 
		{
			::pafcore::Overload(&s__getInstanceArrayPropertyCount__Result_4, s__getInstanceArrayPropertyCount__Arguments_4, 1),
		};
		static ::pafcore::Overload s__getInstanceArrayProperty__Overloads[] = 
		{
			::pafcore::Overload(&s__getInstanceArrayProperty__Result_5, s__getInstanceArrayProperty__Arguments_5, 2),
		};
		static ::pafcore::Overload s__getInstancePropertyCount__Overloads[] = 
		{
			::pafcore::Overload(&s__getInstancePropertyCount__Result_6, s__getInstancePropertyCount__Arguments_6, 1),
		};
		static ::pafcore::Overload s__getInstanceProperty__Overloads[] = 
		{
			::pafcore::Overload(&s__getInstanceProperty__Result_7, s__getInstanceProperty__Arguments_7, 2),
		};
		static ::pafcore::Overload s__getMemberCount__Overloads[] = 
		{
			::pafcore::Overload(&s__getMemberCount__Result_8, s__getMemberCount__Arguments_8, 1),
		};
		static ::pafcore::Overload s__getMember__Overloads[] = 
		{
			::pafcore::Overload(&s__getMember__Result_9, s__getMember__Arguments_9, 2),
		};
		static ::pafcore::InstanceMethod s_instanceMethods[] = 
		{
			::pafcore::InstanceMethod("_findMember_", 0, ClassType__findMember_, s__findMember__Overloads, 1),
			::pafcore::InstanceMethod("_getBaseClassCount_", 0, ClassType__getBaseClassCount_, s__getBaseClassCount__Overloads, 1),
			::pafcore::InstanceMethod("_getBaseClass_", 0, ClassType__getBaseClass_, s__getBaseClass__Overloads, 1),
			::pafcore::InstanceMethod("_getFirstDerivedClass_", 0, ClassType__getFirstDerivedClass_, s__getFirstDerivedClass__Overloads, 1),
			::pafcore::InstanceMethod("_getInstanceArrayPropertyCount_", 0, ClassType__getInstanceArrayPropertyCount_, s__getInstanceArrayPropertyCount__Overloads, 1),
			::pafcore::InstanceMethod("_getInstanceArrayProperty_", 0, ClassType__getInstanceArrayProperty_, s__getInstanceArrayProperty__Overloads, 1),
			::pafcore::InstanceMethod("_getInstancePropertyCount_", 0, ClassType__getInstancePropertyCount_, s__getInstancePropertyCount__Overloads, 1),
			::pafcore::InstanceMethod("_getInstanceProperty_", 0, ClassType__getInstanceProperty_, s__getInstanceProperty__Overloads, 1),
			::pafcore::InstanceMethod("_getMemberCount_", 0, ClassType__getMemberCount_, s__getMemberCount__Overloads, 1),
			::pafcore::InstanceMethod("_getMember_", 0, ClassType__getMember_, s__getMember__Overloads, 1),
		};
		m_instanceMethods = s_instanceMethods;
		m_instanceMethodCount = paf_array_size_of(s_instanceMethods);
		static Metadata* s_members[] = 
		{
			&s_instanceMethods[0],
			&s_instanceMethods[1],
			&s_instanceMethods[2],
			&s_instanceMethods[3],
			&s_instanceMethods[4],
			&s_instanceMethods[5],
			&s_instanceMethods[6],
			&s_instanceMethods[7],
			&s_instanceMethods[8],
			&s_instanceMethods[9],
		};
		m_members = s_members;
		m_memberCount = paf_array_size_of(s_members);
		::pafcore::NameSpace::GetGlobalNameSpace()->getNameSpace("pafcore")->registerMember(this);
	}

	void __pafcore__ClassType_Type::destroyInstance(void* address)
	{
		reinterpret_cast<::pafcore::Reference*>(address)->release();
	}

	void __pafcore__ClassType_Type::destroyArray(void* address)
	{
		paf_delete_array(reinterpret_cast<::pafcore::RefCountImpl<::pafcore::ClassType>*>(address));
	}

	void __pafcore__ClassType_Type::assign(void* dst, const void* src)
	{
		*(::pafcore::ClassType*)dst = *(const ::pafcore::ClassType*)src;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__findMember_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(3 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			const char* a0;
			if(!args[1]->castToPrimitivePtr(RuntimeTypeOf<char>::RuntimeType::GetSingleton(), (void**)&a0))
			{
				return ::pafcore::e_invalid_arg_type_1;
			}
			bool a1;
			if(!args[2]->castToPrimitive(RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), &a1))
			{
				return ::pafcore::e_invalid_arg_type_2;
			}
			::pafcore::Metadata* res = self->_findMember_(a0, a1);
			result->assignReferencePtr(RuntimeTypeOf<::pafcore::Metadata>::RuntimeType::GetSingleton(), res, false, ::pafcore::Variant::by_ptr);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getBaseClassCount_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(1 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			::size_t res = self->_getBaseClassCount_();
			result->assignPrimitive(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), &res);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getBaseClass_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(2 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			::size_t a0;
			if(!args[1]->castToPrimitive(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), &a0))
			{
				return ::pafcore::e_invalid_arg_type_1;
			}
			::pafcore::Metadata* res = self->_getBaseClass_(a0);
			result->assignReferencePtr(RuntimeTypeOf<::pafcore::Metadata>::RuntimeType::GetSingleton(), res, false, ::pafcore::Variant::by_ptr);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getFirstDerivedClass_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(1 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			::pafcore::ClassTypeIterator* res = self->_getFirstDerivedClass_();
			result->assignValuePtr(RuntimeTypeOf<::pafcore::ClassTypeIterator>::RuntimeType::GetSingleton(), res, false, ::pafcore::Variant::by_ptr);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getInstanceArrayPropertyCount_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(2 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			bool a0;
			if(!args[1]->castToPrimitive(RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), &a0))
			{
				return ::pafcore::e_invalid_arg_type_1;
			}
			::size_t res = self->_getInstanceArrayPropertyCount_(a0);
			result->assignPrimitive(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), &res);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getInstanceArrayProperty_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(3 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			::size_t a0;
			if(!args[1]->castToPrimitive(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), &a0))
			{
				return ::pafcore::e_invalid_arg_type_1;
			}
			bool a1;
			if(!args[2]->castToPrimitive(RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), &a1))
			{
				return ::pafcore::e_invalid_arg_type_2;
			}
			::pafcore::InstanceArrayProperty* res = self->_getInstanceArrayProperty_(a0, a1);
			result->assignReferencePtr(RuntimeTypeOf<::pafcore::InstanceArrayProperty>::RuntimeType::GetSingleton(), res, false, ::pafcore::Variant::by_ptr);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getInstancePropertyCount_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(2 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			bool a0;
			if(!args[1]->castToPrimitive(RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), &a0))
			{
				return ::pafcore::e_invalid_arg_type_1;
			}
			::size_t res = self->_getInstancePropertyCount_(a0);
			result->assignPrimitive(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), &res);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getInstanceProperty_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(3 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			::size_t a0;
			if(!args[1]->castToPrimitive(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), &a0))
			{
				return ::pafcore::e_invalid_arg_type_1;
			}
			bool a1;
			if(!args[2]->castToPrimitive(RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), &a1))
			{
				return ::pafcore::e_invalid_arg_type_2;
			}
			::pafcore::InstanceProperty* res = self->_getInstanceProperty_(a0, a1);
			result->assignReferencePtr(RuntimeTypeOf<::pafcore::InstanceProperty>::RuntimeType::GetSingleton(), res, false, ::pafcore::Variant::by_ptr);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getMemberCount_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(2 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			bool a0;
			if(!args[1]->castToPrimitive(RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), &a0))
			{
				return ::pafcore::e_invalid_arg_type_1;
			}
			::size_t res = self->_getMemberCount_(a0);
			result->assignPrimitive(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), &res);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	::pafcore::ErrorCode __pafcore__ClassType_Type::ClassType__getMember_(::pafcore::Variant* result, ::pafcore::Variant** args, int_t numArgs)
	{
		if(3 == numArgs)
		{
			if(args[0]->isConstant())
			{
				return ::pafcore::e_this_is_constant;
			}
			::pafcore::ClassType* self;
			if(!args[0]->castToReferencePtr(GetSingleton(), (void**)&self))
			{
				return ::pafcore::e_invalid_this_type;
			}
			::size_t a0;
			if(!args[1]->castToPrimitive(RuntimeTypeOf<::size_t>::RuntimeType::GetSingleton(), &a0))
			{
				return ::pafcore::e_invalid_arg_type_1;
			}
			bool a1;
			if(!args[2]->castToPrimitive(RuntimeTypeOf<bool>::RuntimeType::GetSingleton(), &a1))
			{
				return ::pafcore::e_invalid_arg_type_2;
			}
			::pafcore::Metadata* res = self->_getMember_(a0, a1);
			result->assignReferencePtr(RuntimeTypeOf<::pafcore::Metadata>::RuntimeType::GetSingleton(), res, false, ::pafcore::Variant::by_ptr);
			return ::pafcore::s_ok;
		}
		return ::pafcore::e_invalid_arg_num;
	}

	__pafcore__ClassType_Type* __pafcore__ClassType_Type::GetSingleton()
	{
		static __pafcore__ClassType_Type* s_instance = 0;
		static char s_buffer[sizeof(__pafcore__ClassType_Type)];
		if(0 == s_instance)
		{
			s_instance = (__pafcore__ClassType_Type*)s_buffer;
			new (s_buffer)__pafcore__ClassType_Type;
		}
		return s_instance;
	}

}

AUTO_REGISTER_TYPE(::idlcpp::__pafcore__ClassTypeIterator_Type)
AUTO_REGISTER_TYPE(::idlcpp::__pafcore__ClassType_Type)
